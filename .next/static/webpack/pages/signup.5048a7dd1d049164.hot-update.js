"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/signup",{

/***/ "(pages-dir-browser)/./src/lib/api.js":
/*!************************!*\
  !*** ./src/lib/api.js ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAssignments: () => (/* binding */ getAssignments),\n/* harmony export */   getLeaderboard: () => (/* binding */ getLeaderboard),\n/* harmony export */   getQuiz: () => (/* binding */ getQuiz),\n/* harmony export */   getResources: () => (/* binding */ getResources),\n/* harmony export */   getSessions: () => (/* binding */ getSessions),\n/* harmony export */   getUserProgress: () => (/* binding */ getUserProgress),\n/* harmony export */   login: () => (/* binding */ login),\n/* harmony export */   signup: () => (/* binding */ signup),\n/* harmony export */   submitQuiz: () => (/* binding */ submitQuiz)\n/* harmony export */ });\n/* harmony import */ var _mock_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mock-data */ \"(pages-dir-browser)/./src/lib/mock-data.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nconst USE_MOCK = true;\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:3000';\nconst delay = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\nasync function getSessions() {\n    if (USE_MOCK) {\n        await delay(300);\n        return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockSessions;\n    }\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/api/sessions\"));\n    return response.json();\n}\nasync function getResources(sessionId) {\n    if (USE_MOCK) {\n        await delay(200);\n        if (sessionId) {\n            return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockResources.filter((r)=>r.sessionId === parseInt(sessionId));\n        }\n        return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockResources;\n    }\n    const url = sessionId ? \"\".concat(API_BASE_URL, \"/api/resources?sessionId=\").concat(sessionId) : \"\".concat(API_BASE_URL, \"/api/resources\");\n    const response = await fetch(url);\n    return response.json();\n}\nasync function getAssignments() {\n    if (USE_MOCK) {\n        await delay(300);\n        return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockAssignments;\n    }\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/api/assignments\"));\n    return response.json();\n}\nasync function getQuiz(id) {\n    if (USE_MOCK) {\n        await delay(300);\n        return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockQuizzes.find((q)=>q.id === parseInt(id));\n    }\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/api/quizzes/\").concat(id));\n    return response.json();\n}\nasync function submitQuiz(quizId, userId, answers) {\n    if (USE_MOCK) {\n        await delay(500);\n        const quiz = _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockQuizzes.find((q)=>q.id === parseInt(quizId));\n        if (!quiz) return {\n            error: 'Quiz not found'\n        };\n        let score = 0;\n        const breakdown = quiz.questions.map((q, index)=>{\n            const userAnswer = answers[q.id];\n            let correct = false;\n            if (q.type === 'mcq') {\n                correct = userAnswer === q.correctAnswer;\n            } else if (q.type === 'text') {\n                correct = (userAnswer === null || userAnswer === void 0 ? void 0 : userAnswer.toLowerCase().trim()) === q.correctAnswer.toLowerCase().trim();\n            }\n            const awarded = correct ? q.points : 0;\n            score += awarded;\n            return {\n                questionId: q.id,\n                correct,\n                awarded,\n                correctAnswer: q.correctAnswer\n            };\n        });\n        const maxScore = quiz.questions.reduce((sum, q)=>sum + q.points, 0);\n        return {\n            score,\n            maxScore,\n            breakdown\n        };\n    }\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/api/quizzes/\").concat(quizId, \"/submit\"), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            userId,\n            answers\n        })\n    });\n    return response.json();\n}\nasync function getLeaderboard(sessionId, period) {\n    if (USE_MOCK) {\n        await delay(300);\n        return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockLeaderboard;\n    }\n    const params = new URLSearchParams();\n    if (sessionId) params.append('sessionId', sessionId);\n    if (period) params.append('period', period);\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/api/leaderboard?\").concat(params.toString()));\n    return response.json();\n}\nasync function login(email, password) {\n    if (USE_MOCK) {\n        await delay(400);\n        const user = _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockUsers.find((u)=>u.email === email && u.password === password);\n        if (!user) {\n            throw new Error('Invalid credentials');\n        }\n        const progress = _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockUserProgress[user.id] || {\n            userId: user.id,\n            completedQuizzes: 0,\n            totalQuizzes: 7,\n            score: 0,\n            progress: 0\n        };\n        const { password: _, ...userWithoutPassword } = user;\n        return {\n            ...userWithoutPassword,\n            progress\n        };\n    }\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/api/auth/login\"), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password\n        })\n    });\n    return response.json();\n}\nasync function signup(name, email, rollNumber, password) {\n    if (USE_MOCK) {\n        await delay(400);\n        const existingUser = _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockUsers.find((u)=>u.email === email);\n        if (existingUser) {\n            throw new Error('Email already exists');\n        }\n        const newUser = {\n            id: _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockUsers.length + 1,\n            name,\n            email,\n            rollNumber,\n            score: 0,\n            avatar: name.split(' ').map((n)=>n[0]).join('').toUpperCase().slice(0, 2),\n            progress: {\n                completedQuizzes: 0,\n                totalQuizzes: 7,\n                score: 0,\n                progress: 0\n            }\n        };\n        return newUser;\n    }\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/api/auth/signup\"), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            name,\n            email,\n            rollNumber,\n            password\n        })\n    });\n    return response.json();\n}\nasync function getUserProgress(userId) {\n    if (USE_MOCK) {\n        await delay(200);\n        return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockUserProgress[userId] || {\n            userId,\n            completedQuizzes: 0,\n            totalQuizzes: 7,\n            score: 0,\n            progress: 0\n        };\n    }\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/api/users/\").concat(userId, \"/progress\"));\n    return response.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/lib/api.js\n"));

/***/ })

});